using System;
using System.Collections.Generic;
using System.Drawing;

namespace LOYADE.PIXIE.DataPixieH5ConveyorMisc
{
    public class PIXIE_6655650a_fe1c_4186_8083_6eb08a627b05 : Pixie
    {
        public PIXIE_6655650a_fe1c_4186_8083_6eb08a627b05()
        { 
            _listfillcolor = new List<Color>();
            _listbordercolor = new List<Color>();
            _listborderwidth = new List<float>();
            
            _x = 0f;
            _y = 0f;
            _z = 0f; 

            _listfillcolor.Add(ColorTranslator.FromHtml("#fc0"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#999"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#bf8c00"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#fc0"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ffd940"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#e5b200"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#e5b200"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#fc0"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#ccc"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#fff"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#fff"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));_listfillcolor.Add(ColorTranslator.FromHtml("#fff"));_listborderwidth.Add(2);_listbordercolor.Add(ColorTranslator.FromHtml("#000"));
_w = 970f; _h = 303f;
_content = "var arrFillColor = new Array(18); var arrBorderColor = new Array(18); var arrBorderWidth = new Array(18); arrFillColor[0] = '#fc0'; arrFillColor[1] = '#999'; arrFillColor[2] = '#bf8c00'; arrFillColor[3] = '#ccc'; arrFillColor[4] = '#fc0'; arrFillColor[5] = '#ffd940'; arrFillColor[6] = '#e5b200'; arrFillColor[7] = '#e5b200'; arrFillColor[8] = '#ccc'; arrFillColor[9] = '#ccc'; arrFillColor[10] = '#ccc'; arrFillColor[11] = '#fc0'; arrFillColor[12] = '#ccc'; arrFillColor[13] = '#ccc'; arrFillColor[14] = '#ccc'; arrFillColor[15] = '#fff'; arrFillColor[16] = '#fff'; arrFillColor[17] = '#fff'; arrBorderColor[0] = '#000'; arrBorderColor[1] = '#000'; arrBorderColor[2] = '#000'; arrBorderColor[3] = '#000'; arrBorderColor[4] = '#000'; arrBorderColor[5] = '#000'; arrBorderColor[6] = '#000'; arrBorderColor[7] = '#000'; arrBorderColor[8] = '#000'; arrBorderColor[9] = '#000'; arrBorderColor[10] = '#000'; arrBorderColor[11] = '#000'; arrBorderColor[12] = '#000'; arrBorderColor[13] = '#000'; arrBorderColor[14] = '#000'; arrBorderColor[15] = '#000'; arrBorderColor[16] = '#000'; arrBorderColor[17] = '#000'; arrBorderWidth[0] = '2'; arrBorderWidth[1] = '2'; arrBorderWidth[2] = '2'; arrBorderWidth[3] = '2'; arrBorderWidth[4] = '2'; arrBorderWidth[5] = '2'; arrBorderWidth[6] = '2'; arrBorderWidth[7] = '2'; arrBorderWidth[8] = '2'; arrBorderWidth[9] = '2'; arrBorderWidth[10] = '2'; arrBorderWidth[11] = '2'; arrBorderWidth[12] = '2'; arrBorderWidth[13] = '2'; arrBorderWidth[14] = '2'; arrBorderWidth[15] = '2'; arrBorderWidth[16] = '2'; arrBorderWidth[17] = '2'; ctx.beginPath(); /* path */ ctx.moveTo(819,88);ctx.lineTo(825,88);ctx.lineTo(825,303);ctx.lineTo(819,303);ctx.lineTo(819,88);ctx.fillStyle = arrFillColor[0];ctx.fill();ctx.lineWidth = arrBorderWidth[0];ctx.strokeStyle = arrBorderColor[0];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(809,88);ctx.lineTo(945,88);ctx.lineTo(945,158);ctx.lineTo(809,158);ctx.lineTo(809,88);ctx.fillStyle = arrFillColor[1];ctx.fill();ctx.lineWidth = arrBorderWidth[1];ctx.strokeStyle = arrBorderColor[1];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(443,303);ctx.lineTo(456,186);ctx.lineTo(462,186);ctx.lineTo(450,303);ctx.lineTo(443,303);ctx.fillStyle = arrFillColor[2];ctx.fill();ctx.lineWidth = arrBorderWidth[2];ctx.strokeStyle = arrBorderColor[2];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(450,271);ctx.lineTo(475,271);ctx.lineTo(475,265);ctx.lineTo(450,265);ctx.lineTo(450,271);ctx.fillStyle = arrFillColor[3];ctx.fill();ctx.lineWidth = arrBorderWidth[3];ctx.strokeStyle = arrBorderColor[3];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(475,303);ctx.lineTo(462,186);ctx.lineTo(472,186);ctx.lineTo(484,303);ctx.lineTo(475,303);ctx.fillStyle = arrFillColor[4];ctx.fill();ctx.lineWidth = arrBorderWidth[4];ctx.strokeStyle = arrBorderColor[4];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(803,28);ctx.lineTo(823,101);ctx.lineTo(891,88);ctx.lineTo(891,38);ctx.lineTo(803,28);ctx.fillStyle = arrFillColor[5];ctx.fill();ctx.lineWidth = arrBorderWidth[5];ctx.strokeStyle = arrBorderColor[5];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(945,164);ctx.lineTo(951,164);ctx.lineTo(951,303);ctx.lineTo(945,303);ctx.lineTo(945,164);ctx.fillStyle = arrFillColor[6];ctx.fill();ctx.lineWidth = arrBorderWidth[6];ctx.strokeStyle = arrBorderColor[6];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(882,164);ctx.lineTo(888,164);ctx.lineTo(888,303);ctx.lineTo(882,303);ctx.lineTo(882,164);ctx.fillStyle = arrFillColor[7];ctx.fill();ctx.lineWidth = arrBorderWidth[7];ctx.strokeStyle = arrBorderColor[7];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(806,164);ctx.lineTo(806,158);ctx.lineTo(970,158);ctx.lineTo(970,164);ctx.lineTo(806,164);ctx.fillStyle = arrFillColor[8];ctx.fill();ctx.lineWidth = arrBorderWidth[8];ctx.strokeStyle = arrBorderColor[8];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(825,259);ctx.lineTo(825,252);ctx.lineTo(951,252);ctx.lineTo(951,259);ctx.lineTo(825,259);ctx.fillStyle = arrFillColor[9];ctx.fill();ctx.lineWidth = arrBorderWidth[9];ctx.strokeStyle = arrBorderColor[9];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(806,227);ctx.lineTo(806,221);ctx.lineTo(835,221);ctx.lineTo(835,227);ctx.lineTo(806,227);ctx.fillStyle = arrFillColor[10];ctx.fill();ctx.lineWidth = arrBorderWidth[10];ctx.strokeStyle = arrBorderColor[10];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(787,88);ctx.lineTo(794,88);ctx.lineTo(794,293);ctx.lineTo(787,293);ctx.lineTo(787,88);ctx.fillStyle = arrFillColor[11];ctx.fill();ctx.lineWidth = arrBorderWidth[11];ctx.strokeStyle = arrBorderColor[11];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(775,161);ctx.lineTo(775,155);ctx.lineTo(806,158);ctx.lineTo(806,164);ctx.lineTo(775,161);ctx.fillStyle = arrFillColor[12];ctx.fill();ctx.lineWidth = arrBorderWidth[12];ctx.strokeStyle = arrBorderColor[12];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(794,255);ctx.lineTo(794,249);ctx.lineTo(825,252);ctx.lineTo(825,259);ctx.lineTo(794,255);ctx.fillStyle = arrFillColor[13];ctx.fill();ctx.lineWidth = arrBorderWidth[13];ctx.strokeStyle = arrBorderColor[13];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(775,224);ctx.lineTo(775,218);ctx.lineTo(806,221);ctx.lineTo(806,227);ctx.lineTo(775,224);ctx.fillStyle = arrFillColor[14];ctx.fill();ctx.lineWidth = arrBorderWidth[14];ctx.strokeStyle = arrBorderColor[14];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(775,155);ctx.lineTo(809,155);ctx.lineTo(835,158);ctx.lineTo(806,158);ctx.lineTo(775,155);ctx.fillStyle = arrFillColor[15];ctx.fill();ctx.lineWidth = arrBorderWidth[15];ctx.strokeStyle = arrBorderColor[15];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(775,218);ctx.lineTo(809,218);ctx.lineTo(835,221);ctx.lineTo(806,221);ctx.lineTo(775,218);ctx.fillStyle = arrFillColor[16];ctx.fill();ctx.lineWidth = arrBorderWidth[16];ctx.strokeStyle = arrBorderColor[16];ctx.stroke();ctx.closePath();ctx.beginPath(); /* path */ ctx.moveTo(794,249);ctx.lineTo(923,249);ctx.lineTo(951,252);ctx.lineTo(825,252);ctx.lineTo(794,249);ctx.fillStyle = arrFillColor[17];ctx.fill();ctx.lineWidth = arrBorderWidth[17];ctx.strokeStyle = arrBorderColor[17];ctx.stroke();ctx.closePath();";
        }


        public override void Paint(Graphics g)
        { 
            SolidBrush sb;
            Pen p;
            List<Point> listpt;
            
listpt = new List<Point>();listpt.Add(new Point(819,88));listpt.Add(new Point(825,88));listpt.Add(new Point(825,303));listpt.Add(new Point(819,303));listpt.Add(new Point(819,88));sb = new SolidBrush(_listfillcolor[0]);p = new Pen(Color.Black);p.Width = _listborderwidth[0];p.Color = _listbordercolor[0];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(809,88));listpt.Add(new Point(945,88));listpt.Add(new Point(945,158));listpt.Add(new Point(809,158));listpt.Add(new Point(809,88));sb = new SolidBrush(_listfillcolor[1]);p = new Pen(Color.Black);p.Width = _listborderwidth[1];p.Color = _listbordercolor[1];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(443,303));listpt.Add(new Point(456,186));listpt.Add(new Point(462,186));listpt.Add(new Point(450,303));listpt.Add(new Point(443,303));sb = new SolidBrush(_listfillcolor[2]);p = new Pen(Color.Black);p.Width = _listborderwidth[2];p.Color = _listbordercolor[2];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(450,271));listpt.Add(new Point(475,271));listpt.Add(new Point(475,265));listpt.Add(new Point(450,265));listpt.Add(new Point(450,271));sb = new SolidBrush(_listfillcolor[3]);p = new Pen(Color.Black);p.Width = _listborderwidth[3];p.Color = _listbordercolor[3];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(475,303));listpt.Add(new Point(462,186));listpt.Add(new Point(472,186));listpt.Add(new Point(484,303));listpt.Add(new Point(475,303));sb = new SolidBrush(_listfillcolor[4]);p = new Pen(Color.Black);p.Width = _listborderwidth[4];p.Color = _listbordercolor[4];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(803,28));listpt.Add(new Point(823,101));listpt.Add(new Point(891,88));listpt.Add(new Point(891,38));listpt.Add(new Point(803,28));sb = new SolidBrush(_listfillcolor[5]);p = new Pen(Color.Black);p.Width = _listborderwidth[5];p.Color = _listbordercolor[5];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(945,164));listpt.Add(new Point(951,164));listpt.Add(new Point(951,303));listpt.Add(new Point(945,303));listpt.Add(new Point(945,164));sb = new SolidBrush(_listfillcolor[6]);p = new Pen(Color.Black);p.Width = _listborderwidth[6];p.Color = _listbordercolor[6];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(882,164));listpt.Add(new Point(888,164));listpt.Add(new Point(888,303));listpt.Add(new Point(882,303));listpt.Add(new Point(882,164));sb = new SolidBrush(_listfillcolor[7]);p = new Pen(Color.Black);p.Width = _listborderwidth[7];p.Color = _listbordercolor[7];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(806,164));listpt.Add(new Point(806,158));listpt.Add(new Point(970,158));listpt.Add(new Point(970,164));listpt.Add(new Point(806,164));sb = new SolidBrush(_listfillcolor[8]);p = new Pen(Color.Black);p.Width = _listborderwidth[8];p.Color = _listbordercolor[8];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(825,259));listpt.Add(new Point(825,252));listpt.Add(new Point(951,252));listpt.Add(new Point(951,259));listpt.Add(new Point(825,259));sb = new SolidBrush(_listfillcolor[9]);p = new Pen(Color.Black);p.Width = _listborderwidth[9];p.Color = _listbordercolor[9];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(806,227));listpt.Add(new Point(806,221));listpt.Add(new Point(835,221));listpt.Add(new Point(835,227));listpt.Add(new Point(806,227));sb = new SolidBrush(_listfillcolor[10]);p = new Pen(Color.Black);p.Width = _listborderwidth[10];p.Color = _listbordercolor[10];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(787,88));listpt.Add(new Point(794,88));listpt.Add(new Point(794,293));listpt.Add(new Point(787,293));listpt.Add(new Point(787,88));sb = new SolidBrush(_listfillcolor[11]);p = new Pen(Color.Black);p.Width = _listborderwidth[11];p.Color = _listbordercolor[11];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(775,161));listpt.Add(new Point(775,155));listpt.Add(new Point(806,158));listpt.Add(new Point(806,164));listpt.Add(new Point(775,161));sb = new SolidBrush(_listfillcolor[12]);p = new Pen(Color.Black);p.Width = _listborderwidth[12];p.Color = _listbordercolor[12];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(794,255));listpt.Add(new Point(794,249));listpt.Add(new Point(825,252));listpt.Add(new Point(825,259));listpt.Add(new Point(794,255));sb = new SolidBrush(_listfillcolor[13]);p = new Pen(Color.Black);p.Width = _listborderwidth[13];p.Color = _listbordercolor[13];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(775,224));listpt.Add(new Point(775,218));listpt.Add(new Point(806,221));listpt.Add(new Point(806,227));listpt.Add(new Point(775,224));sb = new SolidBrush(_listfillcolor[14]);p = new Pen(Color.Black);p.Width = _listborderwidth[14];p.Color = _listbordercolor[14];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(775,155));listpt.Add(new Point(809,155));listpt.Add(new Point(835,158));listpt.Add(new Point(806,158));listpt.Add(new Point(775,155));sb = new SolidBrush(_listfillcolor[15]);p = new Pen(Color.Black);p.Width = _listborderwidth[15];p.Color = _listbordercolor[15];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(775,218));listpt.Add(new Point(809,218));listpt.Add(new Point(835,221));listpt.Add(new Point(806,221));listpt.Add(new Point(775,218));sb = new SolidBrush(_listfillcolor[16]);p = new Pen(Color.Black);p.Width = _listborderwidth[16];p.Color = _listbordercolor[16];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
listpt = new List<Point>();listpt.Add(new Point(794,249));listpt.Add(new Point(923,249));listpt.Add(new Point(951,252));listpt.Add(new Point(825,252));listpt.Add(new Point(794,249));sb = new SolidBrush(_listfillcolor[17]);p = new Pen(Color.Black);p.Width = _listborderwidth[17];p.Color = _listbordercolor[17];g.FillPolygon(sb, listpt.ToArray());g.DrawPolygon(p, listpt.ToArray());
        }
    }
}